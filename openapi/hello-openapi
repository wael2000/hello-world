---
openapi: 3.0.2
info:
  title: Hello World
  version: 1.0.0
paths:
  /messages:
    summary: Path used to manage the list of messages.
    description: "The REST endpoint/path used to list and create zero or more `Message`\
      \ entities.  This path contains a `GET` and `POST` operation to perform the\
      \ list and create tasks, respectively."
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: Successful response - returns an array of `Message` entities.
      operationId: getMessages
      summary: List All Messages
      description: Gets a list of all `Message` entities.
    post:
      requestBody:
        description: A new `Message` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Successful response.
      operationId: createMessage
      summary: Create a Message
      description: Creates a new instance of a `Message`.
  /messages/{messageId}:
    summary: Path used to manage a single Message.
    description: "The REST endpoint/path used to get, update, and delete single instances\
      \ of an `Message`.  This path contains `GET`, `PUT`, and `DELETE` operations\
      \ used to perform the get, update, and delete tasks, respectively."
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Successful response - returns a single `Message`.
      operationId: getMessage
      summary: Get a Message
      description: Gets the details of a single instance of a `Message`.
    put:
      requestBody:
        description: Updated `Message` information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        "202":
          description: Successful response.
      operationId: updateMessage
      summary: Update a Message
      description: Updates an existing `Message`.
    delete:
      responses:
        "204":
          description: Successful response.
      operationId: deleteMessage
      summary: Delete a Message
      description: Deletes an existing `Message`.
    parameters:
    - name: messageId
      description: A unique identifier for a `Message`.
      schema:
        type: string
      in: path
      required: true
components:
  schemas:
    Message:
      title: Root Type for Message
      description: Hello World Message
      type: object
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        value:
          type: string
      example:
        id: 1
        name: hello
        value: world
